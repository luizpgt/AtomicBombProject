// more info at bottom [normal-mode + G]
#include <ctype.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <curses.h>

#define HEAD \
  "yt-dlp -f 'ba' -x --audio-format mp3 --embed-thumbnail" 
#define PATH \
  "-P /home/gokbuck/Videos/yt_dlp/music/"
#define PFILE_FORMAT \
  "--replace-in-metadata \"playlist\" \"[ /]\" \"_\" -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'"
#define MFILE_FORMAT \
  "-o '_mu_noplaylist/%(title)s.%(ext)s'"

void lsopt();
char *appendString(char *str, char *part);
int askCmdConfirmation(char *cmd);

int
main (int argc, char **argv)
{
  int c;
  opterr = 0;
  char *url = NULL;
  char *head = HEAD;
  char *defaultPath = PATH;
  char *playlistFormat = PFILE_FORMAT;
  char *musicFormat = MFILE_FORMAT;

  char *command = (char *)malloc(0*sizeof(char));
  command = appendString(command, head);
  command = appendString(command, defaultPath);
  

  while ((c = getopt (argc, argv, "hpml:")) != -1)
    switch (c)
      {
      case 'h':
        lsopt();
        return 0;
        break;
      case 'p':
        command = appendString(command, playlistFormat);
        break;
      case 'm':
        command = appendString(command, musicFormat);
        break;
      case 'l':
        url = optarg;
        command = appendString(command, url); 
        break;
      case '?':
        if (optopt == 'l')
          fprintf (stderr, "Option -%c requires an argument.\n", optopt);
        else if (isprint (optopt))
          fprintf (stderr, "Unknown option `-%c'.\n", optopt);
        else
          fprintf (stderr,
                   "Unknown option character `\\x%x'.\n",
                   optopt);
        return 1;
      default:
        abort ();
      }

  if (askCmdConfirmation(command))
    system(command);
  return 0;
}

int askCmdConfirmation(char *cmd) {
  printf("COMMAND:\t%s\n\nProceed to download? [Y/n] ", cmd);
  fflush(stdout);
  if ((int)'n' == fgetc(stdin))
    return 0;
  return 1;
}

char *appendString(char *str, char *part) {
  int l = strlen(str) + strlen(part) + 1;
  str = realloc(str, l*sizeof(char));
  strcat(str, " ");
  l++;
  strcat(str, part);
  return str;
}

void lsopt() {
  printf("Usage: ./main.out [OPTIONS] -l [URL]");
  printf("\n\n");
  printf("Options:");
  printf("\n\t");
  printf("General Options:");
  // option -------
  printf("\n\t\t");
  printf("-h");
  printf("\t\t");
  printf("Print this help text and exit.");
  // option -------
  printf("\n\t\t");
  printf("-p");
  printf("\t\t");
  printf("To download multiple videos from a playlist AS MP3.");
  // option -------
  printf("\n\t\t");
  printf("-m");
  printf("\t\t");
  printf("To download a single video AS MP3.");
  // option -------
  printf("\n\t\t");
  printf("-t");
  printf("\t\t");
  printf("[DEFAULT BEHAVIOUR] Saves a thumbnail to a file.");
  // option -------
  printf("\n\t\t");
  printf("-l [URL]");
  printf("\t");
  printf("[MUST HAVE] Permits you to enter the URL.");
  printf("\n\n");
}

/*
 * PROGRAM NAME: yt-dlp-helper
 *
 *  choosing options: 
 *  -h    : help                IMPLEMENTED
 *  -p    : playlist            IMPLEMENTED 
 *  -m    : single music        IMPLEMENTED
 *  -t    : thumbnail           DEFAULT
 *  -c    : custom path +(arg)
 *  -r    : restrict filename
 *  -l    : url +(arg)         IMPLEMENTED 
 *  -v    : video download (+ list all formats asks for format)
 *  -k    : send to device
 *
 *  my phone 06e8714dce2b3c2d
 *
 */
